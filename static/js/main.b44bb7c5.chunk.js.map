{"version":3,"sources":["components/Header.js","utils/constants.js","utils/Api.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","App.js","serviceWorker.js","index.js","images/Vector.svg"],"names":["Header","className","src","logo","alt","React","Component","urlPath","api","baseUrl","headers","this","_url","_headers","path","params","fetch","then","res","ok","json","Promise","reject","status","_fetchData","data","method","body","JSON","stringify","id","isLiked","authorization","Card","handleCardClick","props","onCardClick","card","name","link","onClick","type","likes","length","Main","state","userName","userDescription","userAvatar","cards","all","getUserInfo","getInitialCards","userData","setState","about","avatar","catch","err","console","log","onEditAvatar","onEditProfile","userOccupation","onAddPlace","map","key","_id","cardClick","Footer","PopupWithForm","isOpen","title","onClose","children","buttonTitle","ImagePopup","App","useState","isEditProfileOpen","setEditProfilePopup","isAddPlacePopupOpen","setAddPlacePopup","isEditAvatarPopupOpen","setEditAvatarPopup","selectedCard","setSelectedCardPopup","closeAllPopups","placeholder","required","minLength","maxLength","pattern","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.b44bb7c5.chunk.js","sourcesContent":["import React from \"react\";\nimport logo from \"../images/Vector.svg\";\n\nclass Header extends React.Component {\n\n    render() {\n        return (\n            <header className=\"header\">\n                <img className=\"header__logo\" src={logo} alt=\"Логотип\"/>\n            </header>\n        )\n    }\n\n}\n\nexport default Header","// // элементы валидации формы\n// export const formValidationElements = {\n//   inputSelector: '.popup__input',\n//   submitButtonSelector: '.popup__button-submit',\n//   inactiveButtonClass: 'popup__button-submit_disabled',\n//   inputErrorClass: 'popup__input_type_error',\n//   errorClass: 'popup__input-error',\n// };\n//\n// // элементы Popup\n// export const popupElements = {\n//   popupSelector: '.popup',\n//   popupEditSelector: '#popup-edit',\n//   popupAddCardSelector: '#popup-add-card',\n//   popupImageSelector: '#popup-image',\n//   popupDeleteSelector: '#popup-delete',\n//   popupUpdateAvatarSelector: '#popup-avatar',\n//   inputTitleSelector: '#input-title',\n//   inputSubtitleSelector: '#input-subtitle',\n//   popupButtonSubmitSelector: '.popup__button-submit',\n//   popupButtonSubmitLoading: 'popup__button-submit_loading',\n//   popupPhotoSelector: '.popup__photo',\n//   popupCaptionSelector: '.popup__caption',\n//   formSelector: '.popup__form',\n//   popupOpenClass: 'popup_opened',\n//   popupOverlayClass: 'popup__overlay',\n//   popupButtonCloseClass: 'popup__button-close',\n//   inputSelector: '.popup__input',\n// };\n//\n// // элементы профайла\n// export const profileElements = {\n//   userNameSelector: '.profile__title',\n//   userOccupationSelector: '.profile__subtitle',\n//   editButtonSelector: '.profile__edit-button',\n//   addButtonSelector: '.profile__add-button',\n//   userAvatarImageSelector: '.profile__avatar-image',\n//   userAvatarSelector: '.profile__avatar',\n// };\n//\n// // элементы карточек\n// export const cardElements = {\n//   cardSelector: '#card',\n//   cardSectionSelector: '.cards',\n//   cardElementSelector: '.card',\n//   cardLikeSelector: '.card__like',\n//   cardDeleteButtonSelector: '.card__delete-button',\n//   cardPhotoSelector: '.card__photo',\n//   cardTitleSelector: '.card__title',\n//   cardLikeActiveClass: 'card__like_active',\n//   cardLikeCounter: '.card__like-counter',\n// };\n//\n// // попапы\n// export const addCardPopup = document.querySelector(popupElements.popupAddCardSelector);\n// export const editProfilePopup = document.querySelector(popupElements.popupEditSelector);\n// export const  editPopupAvatar = document.querySelector(popupElements.popupUpdateAvatarSelector);\n//\n// // инпуты попапа с карточками и редактирования профайла\n// export const editPopupName = editProfilePopup.querySelector(popupElements.inputTitleSelector);\n// export const editPopupOccupation = editProfilePopup.querySelector(popupElements.inputSubtitleSelector);\n// export const editButton = document.querySelector(profileElements.editButtonSelector);\n// export const addButton = document.querySelector(profileElements.addButtonSelector);\n// export const editAvatarInput = editPopupAvatar.querySelector(popupElements.inputTitleSelector);\n// export const avatar = document.querySelector(profileElements.userAvatarSelector);\n//\n// //формы попапов\n// export const popupAddCardForm = addCardPopup.querySelector(popupElements.formSelector);\n// export const popupAvatarForm = editPopupAvatar.querySelector(popupElements.formSelector);\n\n// пути для аpi\nexport const urlPath = {\n  userInfo: 'users/me/',\n  cards: 'cards/',\n  avatar: 'avatar',\n  likes: 'likes/',\n}\n// ссылка\nexport const baseUrl = 'https://mesto.nomoreparties.co/v1/cohort-12/';\n\n// headers с токеном\nexport const headers = {\n  authorization: 'd2854785-f942-4a21-9d80-03fbc6fb281b',\n      'Content-Type': 'application/json',\n};","import  {urlPath, baseUrl, headers} from './constants';\n class Api {\n    constructor({baseUrl, headers}) {\n        this._url = baseUrl;\n        this._headers = headers;\n    }\n// запрос\n    _fetchData(path, params) {\n        return fetch(`${this._url}${path}`, params).then(res => {\n            if (res.ok) {\n                return res.json()\n            }\n           return Promise.reject(`Oh my, ошибочка вышла:${res.status}`)\n        })\n    }\n// получаем информация о пользователе\n    getUserInfo() {\n        return this._fetchData(urlPath.userInfo, {headers: this._headers})\n    }\n\n// меняем данные пользователя\n    updateUserInfo(data) {\n        return this._fetchData(urlPath.userInfo, {\n            headers: this._headers,\n            method: 'PATCH',\n            body: JSON.stringify(data),\n        })\n    }\n// меняем аватар\n    updateUserAvatar(data) {\n        return this._fetchData(`${urlPath.userInfo}${urlPath.avatar}`, {\n            headers: this._headers,\n            method: 'PATCH',\n            body: JSON.stringify(data),\n        })\n    }\n// получаем карточки изначальные\n    getInitialCards() {\n        return this._fetchData(urlPath.cards, {headers: this._headers})\n    }\n// добавляем карточку\n    postNewCard(data) {\n        return this._fetchData(urlPath.cards, {\n            headers: this._headers,\n            method: 'POST',\n            body: JSON.stringify(data)\n        })\n    }\n// удаляем карточку\n    deleteCard(id) {\n        return this._fetchData(`${urlPath.cards}${id}`, {\n            method: 'DELETE',\n            headers: this._headers,\n        });\n    }\n    // ставим лайк или убираем\n    like(id, isLiked) {\n        let method;\n        if (isLiked) {\n            method = 'DELETE';\n        } else {\n            method = 'PUT';\n        }\n        return this._fetchData(`${urlPath.cards}${urlPath.likes}${id}`, {\n            method: method,\n            headers: this._headers,\n        });\n    }\n}\n\n\nexport const api = new Api({baseUrl, headers});\n","import React from \"react\";\n\nclass Card extends React.Component {\n\n    // хэндлер клика на карточку\n     handleCardClick = () => {\n        this.props.onCardClick(this.props.card)\n    }\n\n    render() {\n        return (\n            <li className=\"card\">\n                <img\n                    className=\"card__photo\"\n                    alt={this.props.card.name}\n                    src={this.props.card.link}\n                    onClick={this.handleCardClick}\n                />\n                <button className=\"card__delete-button\"></button>\n                <div className=\"card__info-container\">\n                    <h2 className=\"card__title\">{this.props.card.name}</h2>\n                    <div className=\"card__like-container\">\n                        <button className=\"card__like\" type=\"button\"></button>\n                        <p className=\"card__like-counter\">{this.props.card.likes.length}</p>\n                    </div>\n                </div>\n            </li>\n        )\n    }\n}\n\nexport default Card","import React from \"react\";\nimport {api} from \"../utils/Api\";\nimport Card from \"./Card\";\n\n\nclass Main extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userName: '',\n            userDescription: '',\n            userAvatar: '',\n            cards: [],\n        }\n    }\n\n    componentDidMount() {\n        Promise.all([api.getUserInfo(),api.getInitialCards()])\n            .then(([userData, cards]) => {\n                this.setState({\n                    userName: userData.name,\n                    userDescription: userData.about,\n                    userAvatar: userData.avatar,\n                    cards: cards,\n                })\n            }).catch((err) => {\n                console.log(err)\n        })\n    }\n\n    render() {\n        return (\n\n            <main className=\"content\">\n                <section className=\"profile\">\n                    <div className=\"profile__wrap\">\n                        <div className=\"profile__avatar\"  onClick={this.props.onEditAvatar}>\n                            <img className=\"profile__avatar-image\" alt=\"Аватар\" src={this.state.userAvatar}/>\n                        </div>\n                        <div className=\"profile__info\">\n                            <div className=\"profile__text-container\">\n                                <h2 className=\"profile__title\">{this.state.userName}</h2>\n                                <button className=\"profile__edit-button\" type=\"button\" onClick={this.props.onEditProfile}/>\n                            </div>\n                            <p className=\"profile__subtitle\">{this.state.userOccupation}</p>\n                        </div>\n                    </div>\n                    <button className=\"profile__add-button\" type=\"button\" onClick={this.props.onAddPlace}/>\n                </section>\n\n                <ul className=\"cards\">\n                    {this.state.cards.map((card) =>\n                        <Card card={card} key={card._id} onCardClick={this.props.cardClick} />) }\n                </ul>\n\n            </main>\n        )\n    }\n\n}\n\nexport default Main","import React from \"react\";\n\nclass Footer extends React.Component{\n    render() {\n        return (\n        <footer className=\"footer\">\n            <p className=\"footer__title\">\n                &copy; 2020 Mesto Russia\n            </p>\n        </footer>\n        )\n    }\n}\nexport default Footer","import React from \"react\";\n\nclass PopupWithForm extends React.Component {\n\n    render() {\n        return (\n            <div className={`popup popup_type_${this.props.name} ${this.props.isOpen ? 'popup_opened' : ''}`}>\n                    <div className=\"popup__container\">\n                        <h2 className=\"popup__title\">{this.props.title}</h2>\n                        <button className=\"popup__button-close\" onClick={this.props.onClose} type=\"button\"/>\n                        <form className=\"popup__form\" name={this.props.name}>\n                            {this.props.children}\n                            <button className=\"popup__button-submit popup__button-submit_action\" type=\"submit\">{this.props.buttonTitle}</button>\n                        </form>\n                    </div>\n                    <div className=\"popup__overlay\" onClick={this.props.onClose}/>\n                </div>\n        )\n        }\n\n}\nexport default PopupWithForm","import React from \"react\";\n\nclass ImagePopup extends React.Component {\n\n    render() {\n        return (\n            <div className={`popup popup_type_image ${this.props.card ? 'popup_opened' : ''}`}>\n                <figure className=\"popup__image-container\">\n                    <button className=\"popup__button-close\" type=\"button\" onClick={this.props.onClose}></button>\n                    <img className=\"popup__photo\" src={`${this.props.card.link}`} alt={this.props.card.name}/>\n                    <figcaption className=\"popup__caption\">{this.props.card.name}</figcaption>\n                </figure>\n                <div className=\"popup__overlay popup__overlay_image\" onClick={this.props.onClose}/>\n            </div>\n        )\n    }\n\n}\n\nexport default ImagePopup","import React from 'react';\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\nimport Footer from \"./components/Footer\";\nimport './index.css';\nimport PopupWithForm from \"./components/PopupWithForm\";\nimport ImagePopup from \"./components/ImagePopup\";\n\nfunction App() {\n    // cтейты попапов\n\nconst [isEditProfileOpen, setEditProfilePopup] = React.useState(false);\nconst [isAddPlacePopupOpen, setAddPlacePopup] = React.useState(false);\nconst [isEditAvatarPopupOpen, setEditAvatarPopup] = React.useState(false);\nconst [selectedCard, setSelectedCardPopup] = React.useState('');\n\n    // хендлеры попапов\n\nfunction handleCardClick(card) {\n    setSelectedCardPopup(card)\n}\n\n  function handleEditAvatarClick ()  {\n     setEditAvatarPopup(!isEditProfileOpen);\n  }\n\n function handleEditProfileClick  ()  {\n    setEditProfilePopup(!isAddPlacePopupOpen);\n  }\n\n   function handleAddPlaceClick ()  {\n    setAddPlacePopup(!isEditAvatarPopupOpen);\n  }\n\n    // закрытие попапов\n\n  function closeAllPopups () {\n      setAddPlacePopup(false);\n      setEditAvatarPopup(false);\n      setEditProfilePopup(false);\n      setSelectedCardPopup('');\n  }\n\n  return (\n      <div className=\"page\">\n        <Header/>\n        <Main onAddPlace={handleAddPlaceClick}\n              onEditProfile={handleEditProfileClick}\n              onEditAvatar={handleEditAvatarClick}\n              cardClick={handleCardClick} />\n        <Footer/>\n          <PopupWithForm name={'popup-delete'} title={'Вы уверены?'} buttonTitle={'Да'} isOpen={false} ></PopupWithForm>\n\n          <PopupWithForm name={'edit-avatar'} title={'Обновить Аватар'} buttonTitle={'Сохранить'} isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups}>\n              <label className=\"popup__form-label\">\n                  <input className=\"popup__input\" id=\"input-title\" name=\"avatar\" type=\"url\" placeholder=\"Ссылка на картинку\"\n                         required/>\n                  <span className=\"popup__input-error\" id=\"input-title-error\"></span>\n              </label>\n          </PopupWithForm>\n\n          <PopupWithForm name={'edit-profile'} title={'Редактировать Профиль'} buttonTitle={'Cохранить'} isOpen={isEditProfileOpen} onClose={closeAllPopups}>\n              <label className=\"popup__form-label\">*/}\n                  <input className=\"popup__input\" id=\"input-title\" name=\"name\" type=\"text\" placeholder=\"ФИО\" minLength=\"2\"\n                         maxLength=\"20\" pattern=\"[a-zA-ZА-ЯЁа-яё\\s\\-]+\" required/>\n                  <span className=\"popup__input-error\" id=\"input-title-error\"> </span>\n              </label>\n              <label className=\"popup__form-label\">\n                  <input className=\"popup__input\" id=\"input-subtitle\" name=\"occupation\" type=\"text\" placeholder=\"Профессия\"\n                         minLength=\"2\" maxLength=\"200\" pattern=\"^[^\\s\\-].+[^\\s']$\" required/>\n                  <span className=\"popup__input-error\" id=\"input-subtitle-error\"> </span>\n              </label>\n          </PopupWithForm>\n\n          <PopupWithForm name={'add-card'} title={'Новое Место'} buttonTitle={'Создать'} isOpen={isAddPlacePopupOpen} onClose={closeAllPopups}>\n              <label className=\"popup__form-label\">\n                  <input className=\"popup__input\" id=\"input-title\" name=\"name\" type=\"text\" placeholder=\"Название\" minLength=\"1\"\n                         maxLength=\"30\" required/>\n                  <span className=\"popup__input-error\" id=\"input-title-error\"></span>\n              </label>\n              <label className=\"popup__form-label\">\n                  <input className=\"popup__input\" id=\"input-subtitle\" name=\"link\" type=\"url\" placeholder=\"Ссылка на картинку\"\n                         required/>\n                  <span className=\"popup__input-error\" id=\"input-subtitle-error\"></span>\n              </label>\n          </PopupWithForm>\n\n          <ImagePopup card={selectedCard} onClose={closeAllPopups}/>\n\n\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Vector.c6f11019.svg\";"],"sourceRoot":""}